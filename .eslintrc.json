{
  "env": {
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "extends": ["airbnb-base", "airbnb-typescript/base", "prettier"],
  "plugins": ["prettier", "@typescript-eslint"],
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "rules": {
    "import/extensions": [
      "off",
      "ignorePackages",
      {
        "js": "never",
        "jsx": "never",
        "ts": "never",
        "tsx": "never"
      }
    ],
    "consistent-return": "off",
    "func-names": "off",
    "import/prefer-default-export": "off",
    "no-nested-ternary": "off",
    "no-param-reassign": "off",
    "no-restricted-syntax": [
      "error",
      {
        "selector": "ForInStatement",
        "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
      },
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-return-assign": ["error", "except-parens"],
    "no-underscore-dangle": "off",
    "no-use-before-define": "off",
    "class-methods-use-this": "off",
    "prettier/prettier": ["warn"],
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars-experimental": "off"
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"],
        "paths": ["src"]
      }
    }
  }
}
